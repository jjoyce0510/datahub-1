fragment monitorDetails on Monitor {
    urn
    type
    info {
        type
        assertionMonitor {
            assertions {
                assertion {
                    ...assertionDetails
                }
                schedule {
                    cron
                    timezone
                }
                parameters {
                    type
                    datasetFreshnessParameters {
                        sourceType
                        auditLog {
                            operationTypes
                            userName
                        }
                        field {
                            type
                            nativeType
                            path
                            kind
                        }
                    }
                    datasetVolumeParameters {
                        sourceType
                    }
                    datasetFieldParameters {
                        sourceType
                        changedRowsField {
                            type
                            nativeType
                            path
                            kind
                        }
                    }
                }
            }
        }
        status {
            mode
        }
        executorId
    }
}

mutation deleteMonitor($urn: String!) {
    deleteMonitor(urn: $urn)
}

mutation createAssertionMonitor($input: CreateAssertionMonitorInput!) {
    createAssertionMonitor(input: $input) {
        ...monitorDetails
    }
}

mutation updateMonitorStatus($input: UpdateMonitorStatusInput!) {
    updateMonitorStatus(input: $input) {
        ...monitorDetails
    }
}

fragment assertionsQueryWithMonitors on Dataset {
    assertions(start: 0, count: 1000) {
        start
        count
        total
        assertions {
            ...assertionDetails
            monitor: relationships(input: { types: ["Evaluates"], direction: INCOMING, start: 0, count: 1 }) {
                relationships {
                    entity {
                        ... on Monitor {
                            ...monitorDetails
                        }
                    }
                }
            }
            runEvents(status: COMPLETE, limit: 1) {
                total
                failed
                succeeded
                runEvents {
                    ...assertionRunEventDetails
                }
            }
        }
    }
}

query getDatasetAssertionsWithMonitors($urn: String!) {
    dataset(urn: $urn) {
        ...assertionsQueryWithMonitors
        siblings {
            isPrimary
            siblings {
                urn
                type
                ...assertionsQuery
            }
        }
    }
}
